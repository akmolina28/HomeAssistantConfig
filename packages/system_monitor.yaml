input_number:
  cpu_temp:
    name: CPU Temperature
    min: 0
    max: 200000

sensor:

- platform: rest
  name: Glances Uptime
  resource: !secret rest_url_glances_uptime
  value_template: '{{ value_json }}'

- platform: rest
  name: Glances C Total
  resource: !secret rest_url_glances_c_total
  value_template: '{{ ((value_json.size[0] | int) / 1074000000) | round(1) }}'

- platform: systemmonitor
  resources:
  - type: disk_use_percent
    arg: /home
  - type: disk_free
    arg: /home
  - type: disk_use
    arg: /home
  - type: memory_free
  - type: memory_use
  - type: memory_use_percent
  - type: processor_use
  - type: last_boot
  - type: load_15m
  - type: ipv4_address
    arg: enp0s18

- platform: version

- platform: template
  sensors:
    diskstation_temp_celsius:
      value_template: '{{ ((states("sensor.diskstation_temperature") | int - 32) * 5 / 9) | round(1) }}'
    diskstation_drive_1_temp_celsius:
      value_template: '{{ ((states("sensor.diskstation_drive_1_temperature") | int - 32) * 5 / 9) | round(1) }}'
    diskstation_drive_2_temp_celsius:
      value_template: '{{ ((states("sensor.diskstation_drive_2_temperature") | int - 32) * 5 / 9) | round(1) }}'
    proxmox_cpu_temp:
      value_template: '{{ states("input_number.cpu_temp") | multiply(0.001) | round(1) }}'
    disk_total_home:
      value_template: '{{ (states("sensor.disk_use_home") | float + states("sensor.disk_free_home") | float) | round(1) }}'
      unit_of_measurement: 'GiB'
    vm_uptime:
      value_template: >
        {% set current = as_timestamp(states("sensor.date_time_iso")) %}
        {% set last_boot = as_timestamp(states("sensor.last_boot")) %}
        {% set span = (current - last_boot) / (60 * 60 * 24) %}
        {% set days = span | round(0, 'floor') %}
        {% set span = 24 * (span - days) %}
        {% set hours = span | round(0, 'floor') %}
        {% set span = 60 * (span - hours) %}
        {% set minutes = span | round(0, 'floor') %}

        {{ days | string + 'd ' + hours | string + 'h ' + minutes | string + 'm' }}

    synology_uptime:
      value_template: >
        {% set current = as_timestamp(states("sensor.date_time_iso")) %}
        {% set last_boot = as_timestamp(states("sensor.diskstation_last_boot")) %}
        {% set span = (current - last_boot) / (60 * 60 * 24) %}
        {% set days = span | round(0, 'floor') %}
        {% set span = 24 * (span - days) %}
        {% set hours = span | round(0, 'floor') %}
        {% set span = 60 * (span - hours) %}
        {% set minutes = span | round(0, 'floor') %}

        {{ days | string + 'd ' + hours | string + 'h ' + minutes | string + 'm' }}


homeassistant:
  customize:
    sensor.proxmox_cpu_temp:
      templates:
        unit_of_measurement: °C
        device_class: temperature
    sensor.glances_cpu_temp:
      templates:
        unit_of_measurement: °C
        device_class: temperature
    sensor.diskstation_drive_1_temp_celsius:
      templates:
        unit_of_measurement: °C
        device_class: temperature
    sensor.diskstation_drive_2_temp_celsius:
      templates:
        unit_of_measurement: °C
        device_class: temperature
    sensor.diskstation_temp_celsius:
      templates:
        unit_of_measurement: °C
        device_class: temperature
    sensor.disk_total_home:
      templates:
        icon: mdi:harddisk
    sensor.disk_free_home:
      templates:
        icon: mdi:harddisk
    sensor.disk_use_home:
      templates:
        icon: mdi:harddisk
    sensor.disk_use_percent_home:
      templates:
        icon: mdi:harddisk
    sensor.memory_use_percent:
      templates:
        icon: mdi:chip
    sensor.memory_free:
      templates:
        icon: mdi:chip
    sensor.memory_use:
      templates:
        icon: mdi:chip
    sensor.processor_use:
      templates:
        icon: mdi:memory

proxmoxve:
- host: !secret proxmox_host
  username: !secret proxmox_username
  password: !secret proxmox_password
  verify_ssl: false
  realm: pve
  nodes:
  - node: 'proxmox'
    vms:
    - 101
    containers:
    - 102
    - 103