- platform: time_date
  display_options:
  - 'time'
  - 'date'
  - 'date_time'
  - 'date_time_iso'
  - 'time_date'
  - 'time_utc'
  - 'beat'

- platform: template
  sensors:
    day_of_week:
      value_template: >
        {% if (now().weekday() == 0) %}
          Monday
        {% elif (now().weekday() == 1) %}
          Tuesday
        {% elif (now().weekday() == 2) %}
          Wednesday
        {% elif (now().weekday() == 3) %}
          Thursday
        {% elif (now().weekday() == 4) %}
          Friday
        {% elif (now().weekday() == 5) %}
          Saturday
        {% elif (now().weekday() == 6) %}
          Sunday
        {% endif %}
    day_of_week_abbr:
      value_template: >
        {% if (now().weekday() == 0) %}
          MON
        {% elif (now().weekday() == 1) %}
          TUE
        {% elif (now().weekday() == 2) %}
          WED
        {% elif (now().weekday() == 3) %}
          THU
        {% elif (now().weekday() == 4) %}
          FRI
        {% elif (now().weekday() == 5) %}
          SAT
        {% elif (now().weekday() == 6) %}
          SUN
        {% endif %}
    month:
      value_template: >
        {% if (now().month == 1) %}
          January
        {% elif (now().month == 2) %}
          February
        {% elif (now().month == 3) %}
          March
        {% elif (now().month == 4) %}
          April
        {% elif (now().month == 5) %}
          May
        {% elif (now().month == 6) %}
          June
        {% elif (now().month == 7) %}
          July
        {% elif (now().month == 8) %}
          August
        {% elif (now().month == 9) %}
          September
        {% elif (now().month == 10) %}
          October
        {% elif (now().month == 11) %}
          November
        {% elif (now().month == 12) %}
          December
        {% endif %}
    month_abbr:
      value_template: >
        {% if (now().month == 1) %}
          JAN
        {% elif (now().month == 2) %}
          FEB
        {% elif (now().month == 3) %}
          MAR
        {% elif (now().month == 4) %}
          APR
        {% elif (now().month == 5) %}
          MAY
        {% elif (now().month == 6) %}
          JUN
        {% elif (now().month == 7) %}
          JUL
        {% elif (now().month == 8) %}
          AUG
        {% elif (now().month == 9) %}
          SEP
        {% elif (now().month == 10) %}
          OCT
        {% elif (now().month == 11) %}
          NOV
        {% elif (now().month == 12) %}
          DEC
        {% endif %}

    date_abbr:
      value_template: >
        {{ states.sensor.month_abbr.state + " " + (now().day | string) }}

    hvac_mode:
      value_template: '{{ state_attr("climate.thermostat", "hvac_action") }}'

    payday_countdown:
      value_template: >
        {% set now_timestamp = as_timestamp(strptime(states("sensor.date_time"), "%Y-%m-%d, %H:%M")) %}
        {% set next_payday = state_attr("calendar.payday", "start_time") %}
        {% set next_holiday = state_attr("calendar.holidays_in_united_states", "start_time") %}
        {% set next_payday_timestamp = as_timestamp(state_attr("calendar.payday", "start_time")) %}
        {% set next_holiday_timestamp = as_timestamp(state_attr("calendar.holidays_in_united_states", "start_time")) %}

        {# check if next payday falls on holiday #}
        {% if (next_payday_timestamp == next_holiday_timestamp) %}
          {# move payday back by 1 day #}
          {% set next_payday_timestamp = next_payday_timestamp - (24 * 60 * 60) %}
        {% endif %}

        {% set next_payday_date = strptime(next_payday_timestamp | timestamp_local, "%Y-%m-%d %H:%M:%S") %}

        {# if payday falls on a saturday, subtract a day #}
        {% if (next_payday_date.weekday() == 5) %}
          {% set next_payday_timestamp = next_payday_timestamp - (24 * 60 * 60) %} 
        {# if payday falls on a sunday, subtract 2 days #}
        {% elif (next_payday_date.weekday() == 6) %}
          {% set next_payday_timestamp = next_payday_timestamp - (48 * 60 * 60) %}
        {% endif %}

        {# calculate number of days between now and adjusted payday #}
        {{ ((next_payday_timestamp - now_timestamp) / (24 * 60 * 60)) | round(0, 'ceil') }}
